<?xml version="1.0"?>
<robot name="roscontrol" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="robot_side" value="0.3" />
  <xacro:property name="lidar_radius" value="0.06" />
  <xacro:property name="lidar_height" value="0.12" />
  <xacro:property name="wheeldiam" value="0.07" />
  <xacro:property name="pi" value="3.1415" />

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>

  <link name="base_link">
    <visual>
      <geometry>
        <box size="${robot_side} ${robot_side} ${robot_side/2}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="${robot_side} ${robot_side} ${robot_side/2}"/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="30"/>
  </link>

  <xacro:macro name="wheel" params="rl fb rl_reflect fb_reflect">

    <link name="${rl}_${fb}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheeldiam/2}" length="${wheeldiam/4}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheeldiam/2}" length="${wheeldiam/4}"/>
        </geometry>
      </collision>
      <xacro:default_inertial mass="1"/>
    </link>
    <joint name="${rl}_${fb}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${rl}_${fb}_wheel"/>
      <origin xyz="${robot_side/3*fb_reflect} ${robot_side/3*rl_reflect} -${wheeldiam/2+.05}" rpy="0 0 0"/>
    </joint>

    <gazebo reference="${rl}_${fb}_wheel">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
    </gazebo>

    <transmission name="${rl}_${fb}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${rl}_${fb}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${rl}_${fb}_wheel_joint">
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  </xacro:macro>
	<xacro:wheel rl="right" fb="front" rl_reflect="1" fb_reflect="1"/>
	<xacro:wheel rl="right" fb="back" rl_reflect="1" fb_reflect="-1"/>
	<xacro:wheel rl="left" fb="front" rl_reflect="-1" fb_reflect="1"/>
	<xacro:wheel rl="left" fb="back" rl_reflect="-1" fb_reflect="-1"/>
	
  <link name="lidar">
    <visual>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_height}" />
      </geometry>
      <material name="blue"/>
      <origin xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_height}" />
      </geometry>
    </collision>
    <xacro:default_inertial mass="1"/>
  </link>

	<gazebo reference="lidar">
		<sensor name="laser" type="ray">
			<pose>0 0 0 0 0 0</pose>
			<visualize>true</visualize>
			<update_rate>10</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>360</samples>
						<resolution>1</resolution>
						<min_angle>-3.14</min_angle>
						<max_angle>3.14</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.3</min>
					<max>12</max>
					<resolution>0.01</resolution>
				</range>
			</ray>
			<plugin name="laser_controller" filename="libgazebo_ros_laser.so">
				<topicName>/scan</topicName>
				<frameName>lidar</frameName>
			</plugin>
		</sensor>
	</gazebo>
  
	<joint name="base_to_lidar" type="fixed">
    <parent link="base_link"/>
    <child link="lidar"/>
    <origin xyz="0 0 ${(robot_side/2+lidar_height)/2}"/>
  </joint>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>

</robot>
